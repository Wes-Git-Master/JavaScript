 ==========================================================================

                              Змінні :

 var -  змінна старого типу (має загальну область видимості),
         вже не використовується або використовується рідко.

 let -  використовується замість var (можна перевизначати),
         має блочну область видимості (існує лише в межах блоку коду).

 const - має ті ж характеристики блокової області видимості що і let,
          але з додатковим обмеженням,
           значення змінної не може бути переназначене.

 ==========================================================================

                          Примітивні типи даних :

 Примітивні типи даних є базовими і не мають методів або властивостей.
  В JavaScript до примітивних типів відносяться:

 --------------------------------------------------------------------------
 Number - Числові значення. Включають як цілі числа,
 ------    так і числа з плаваючою точкою.

 let num = 42;
 let pi = 3.14;

 --------------------------------------------------------------------------
 String - Рядки символів.
 ------
 let greeting = "Hello, World!";

 --------------------------------------------------------------------------
 Boolean - Логічні значення true або false.
 -------
 let isActive = true;

 --------------------------------------------------------------------------
 Undefined - Тип даних для змінних,
 ---------    яким не присвоєно значення.

 --------------------------------------------------------------------------
 Null - Спеціальне значення,
 ----    яке представляє відсутність будь-якого об'єкта.
 let y = null;

 --------------------------------------------------------------------------
 Symbol - Унікальні ідентифікатори,
 ------    створені за допомогою функції Symbol.
 let sym = Symbol("description");

 --------------------------------------------------------------------------
 BigInt - Тип даних для роботи,
 ------    з цілими числами довільної точності.
 let bigInt = 1234567890123456789012345678901234567890n;

 ==========================================================================

                        Об'єктні типи даних :

 Об'єкти є складнішими структурами і можуть містити колекції даних та
 функцій.

 --------------------------------------------------------------------------

 Object - Базовий тип даних для об'єктів.
 ------
 let person = {
   name: "Alice",
   age: 25
 };

 --------------------------------------------------------------------------

 Array - Вбудований об'єкт для зберігання впорядкованих колекцій елементів.
 -----
 let numbers = [1, 2, 3, 4, 5];

 --------------------------------------------------------------------------

 Function - Спеціальний вид об'єкта для визначення функцій.
 --------
 function greet(name) {
   return "Hello, " + name;
 }

 --------------------------------------------------------------------------

 Date - Вбудований об'єкт для роботи з датами і часом.
 ----
 let now = new Date();

 --------------------------------------------------------------------------

 RegExp - Вбудований об'єкт для роботи з регулярними виразами.
 ------
 let pattern = /abc/;

 --------------------------------------------------------------------------

 Map - Колекція пар ключ-значення, де ключі можуть бути будь-якого типу.
 ---
 let map = new Map();
 map.set("key", "value");

 --------------------------------------------------------------------------

 Set - Колекція унікальних значень будь-якого типу.
 ---
 let set = new Set([1, 2, 3, 3, 4]);

 ==========================================================================

 Типи даних і оператор typeof :

 Оператор 'typeof' дозволяє визначити тип даних змінної.

 --------------------------------------------------------------------------

 console.log(typeof 42); -------------------------------------- // "number"
 console.log(typeof "Hello"); --------------------------------- // "string"
 console.log(typeof true); -------------------------------------// "boolean"
 console.log(typeof undefined); --------------------------------// "undefined"
 console.log(typeof null); // "object" (це помилка в мові, історично залишилася)
 console.log(typeof Symbol("id")); -----------------------------// "symbol"
 console.log(typeof 1234567890123456789012345678901234567890n); // "bigint"
 console.log(typeof { name: "Alice" }); ----------------------- // "object"
 console.log(typeof [1, 2, 3]); ------------------------------- // "object"
 console.log(typeof function() {}); --------------------------- // "function"

 Ці типи даних дозволяють JavaScript бути гнучким і універсальним мовою програмування,
 здатною обробляти різноманітні завдання від роботи з простими значеннями
 до маніпуляцій зі складними об'єктами і структурами.

 ==========================================================================









